name: Auto AGI Builder CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Frontend CI Job
  frontend-ci:
    name: Frontend Tests and Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'frontend/package.json'
          
      - name: Install dependencies
        run: |
          cd frontend
          npm ci
          
      - name: Run linter
        run: |
          cd frontend
          npm run lint
          
      - name: Run tests
        run: |
          cd frontend
          npm test -- --coverage
          
      - name: Build project
        run: |
          cd frontend
          npm run build
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: frontend/.next
          retention-days: 3
          
      - name: Upload test coverage
        uses: actions/upload-artifact@v3
        with:
          name: frontend-coverage
          path: frontend/coverage
          retention-days: 3
  
  # Backend CI Job
  backend-ci:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: autoagibuilder_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov
          
      - name: Run tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/autoagibuilder_test
          SECRET_KEY: ${{ secrets.SECRET_KEY || 'test_secret_key_for_ci' }}
          ENVIRONMENT: test
        run: |
          pytest app --cov=app --cov-report=xml
          
      - name: Upload test coverage
        uses: actions/upload-artifact@v3
        with:
          name: backend-coverage
          path: coverage.xml
          retention-days: 3
  
  # Deploy Job (Only runs on main branch after tests pass)
  deploy:
    name: Deploy to Vercel
    needs: [frontend-ci, backend-ci]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Download frontend build
        uses: actions/download-artifact@v3
        with:
          name: frontend-build
          path: frontend/.next
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install Vercel CLI
        run: npm install -g vercel
        
      - name: Run deployment check script
        run: node scripts/deployment_checklist.js
        
      - name: Deploy to Vercel
        run: |
          cd frontend
          vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }} --yes
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  
  # Notification Job (Runs after deployment)
  notify:
    name: Send Deployment Notification
    needs: deploy
    runs-on: ubuntu-latest
    
    steps:
      - name: Send Email Notification
        uses: dawidd6/action-send-mail@v3
        continue-on-error: true
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: 'Auto AGI Builder Deployment Completed'
          body: |
            A new deployment of Auto AGI Builder has been completed.
            
            Commit: ${{ github.sha }}
            Author: ${{ github.actor }}
            Message: ${{ github.event.head_commit.message }}
            
            View the deployment here: https://auto-agi-builder.vercel.app
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: noreply@autoagibuilder.com
