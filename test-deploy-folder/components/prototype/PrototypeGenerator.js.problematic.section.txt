interface DashboardStats {
  totalProjects: number;
  activeProjects: number;
  completedTasks: number;
  pendingTasks: number;
  recentActivity: Array<{
    id: string;
    action: string;
    date: string;
    user: string;
  }>;
}
` : ''}
const Dashboard = ({ userId }${isTypescript ? ': DashboardProps' : ''}) => {
  const [stats, setStats] = useState${isTypescript ? '<DashboardStats | null>' : ''}(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState${isTypescript ? '<string | null>' : ''}(null);
  
  useEffect(() => {
    const fetchStats = async () => {
      try {
        // In a real implementation this would be an API call
        // const response = await fetch(`/api/users/${userId}/dashboard-stats`);
        // const data = await response.json();
        
        // Simulated API response
        const mockData = {
          totalProjects: 12,
          activeProjects: 5,
          completedTasks: 87,
          pendingTasks: 34,
